import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React from 'react';
import './style.css';
export default function Ring(_ref) {
  var color = _ref.color,
      size = _ref.size,
      className = _ref.className,
      style = _ref.style;

  var circles = _toConsumableArray(Array(4)).map(function (_, index) {
    return React.createElement("div", {
      key: index,
      style: {
        borderColor: "".concat(color, " transparent transparent transparent"),
        width: size * 0.8,
        height: size * 0.8,
        margin: size * 0.1,
        borderWidth: size * 0.1
      }
    });
  });

  return React.createElement("div", {
    className: "lds-ring ".concat(className),
    style: _objectSpread({
      width: size,
      height: size
    }, style)
  }, circles);
}
Ring.defaultProps = {
  color: '#7f58af',
  size: 80,
  className: '',
  style: {}
};